q()
library(tidyverse)
installed.packages()
install.packages(c("broom", "bslib", "callr", "dbplyr", "farver", "generics", "htmltools", "MASS", "nlme", "pillar", "pkgload", "processx", "R.cache", "R.utils", "rlang", "roxygen2", "sass", "stringi", "tibble", "tidyverse"))
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("jsonlite")
install.packages("tidyverse")
library(tidyverse)
detach("package:tibble", unload = TRUE)
library(tibble)
setwd("~/MSU/Challenges/MechaCar_Statistical_Analysis")
setwd("~/MSU/Challenges/MechaCar_Statistical_Analysis/01_Demo")
install.packages("jsonlite")
install.packages("jsonlite")
> x <- 3
x<-
x<-3
x<-5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
?<name of function>
?<if>
? <if>
?<name of function>if
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table)
View(demo_table2)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
demo_table[3,"Year"]
demo_table[3,3]
demo_table$"Vehicle_Class"
View(demo_table2)
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
?subset()
filter_table <- demo_table2[demo_table2$price > 10000,]
filter_table <- demo_table2[demo_table2$price > 10000,]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
View(filter_table3)
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
[1]
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
[1]
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
setwd("~/MSU/Challenges/MechaCar_Statistical_Analysis")
library(tidyverse)
library(dplyr)
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
View(mecha_data)
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_data)
View(mecha_lm)
summary(mecha_lm)
suspension_data <- read.csv("Suspension_Coil.csv",stringsAsFactors = F,check.names = F)
total_summary <- suspension_data %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
View(total_summary)
View(suspension_data)
lot_summary <- suspension_data %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups='keep')
View(lot_summary)
t.test(suspension_data$PSI, mu=1500)
t.test(subset(suspension_data, Manufacturing_Lot == "Lot1")$PSI, mu=1500)
t.test(subset(suspension_data, Manufacturing_Lot == "Lot1", "Lot2", "Lot3")$PSI, mu=1500)
t.test(subset(suspension_data, Manufacturing_Lot == "Lot2")$PSI, mu=1500)
t.test(subset(suspension_data, Manufacturing_Lot == "Lot3")$PSI, mu=1500)
